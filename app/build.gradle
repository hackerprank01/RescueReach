plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'com.rescuereach'
    compileSdk 35

    defaultConfig {
        applicationId "com.rescuereach"
        minSdk 23
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }



    flavorDimensions "role"

    productFlavors {
        citizen {
            dimension "role"
            applicationId "com.rescuereach.citizen"
            versionNameSuffix ".citizen"
            resValue "string", "app_name", "RescueReach"
        }
        responder {
            dimension "role"
            applicationId "com.rescuereach.responder"
            versionNameSuffix ".responder"
            resValue "string", "app_name", "RescueReach Responder"
        }
    }

    // Explicitly define source sets
    sourceSets {
        citizen {
            java.srcDirs = ['src/citizen/java']
            res.srcDirs = ['src/citizen/res']
        }
        responder {
            java.srcDirs = ['src/responder/java']
            res.srcDirs = ['src/responder/res']
        }
    }
}

tasks.register('buildBothFlavors') {
    dependsOn 'assembleCitizenDebug', 'assembleResponderDebug'
    group = 'build'
    description = 'Builds both citizen and responder debug variants'
}

// Make standard debug build create both variants
gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(':app:assembleDebug')) {
        tasks.named('assembleDebug').configure {
            finalizedBy 'buildBothFlavors'
        }
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}