{
  "rules": {
    // Admin has full access to everything
    ".read": "auth != null && root.child('admins').child(auth.uid).exists()",
    ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
    
    // User profiles - using phoneNumber (without +) as node key
    "users": {
      "$phoneNumber": {
        // Citizens can read/write their own data
        ".read": "auth != null && data.child('userId').val() == auth.uid",
        ".write": "auth != null && (data.child('userId').val() == auth.uid || !data.exists())",
        
        // Responders can read user profiles
        ".read": "auth != null && root.child('responders').child(auth.uid).exists()",
        
        // Volunteers can read limited user data for emergency response
        ".read": "auth != null && 
                 root.child('users').child(auth.phoneNumber.replace('+', '')).child('isVolunteer').val() == true"
      }
    },
    
    // Incidents
    "incidents": {
      "$incidentId": {
        // Citizens can read their own incidents
        ".read": "auth != null && 
                 root.child('users').child(data.child('phoneNumber').val().replace('+', '')).child('userId').val() == auth.uid",
        
        // Citizens can create incidents
        ".write": "auth != null && newData.child('userId').val() == auth.uid && !data.exists()",
        
        // Responders can read incidents matching their role and state
        ".read": "auth != null && 
                 root.child('responders').child(auth.uid).exists() && 
                 data.child('category').val() == root.child('responders').child(auth.uid).child('role').val() &&
                 data.child('state').val() == root.child('responders').child(auth.uid).child('state').val()",
        
        // Volunteers can read incidents in their city/state
        ".read": "auth != null && 
                 root.child('users').child(auth.phoneNumber.replace('+', '')).child('isVolunteer').val() == true &&
                 data.child('state').val() == root.child('users').child(auth.phoneNumber.replace('+', '')).child('state').val()",
        
        // Responders can update incidents they're assigned to
        ".write": "auth != null && 
                  root.child('responders').child(auth.uid).exists() && 
                  data.child('assignedTo').val() == auth.uid",
        
        // Status updates
        "status": {
          ".write": "auth != null && 
                    root.child('responders').child(auth.uid).exists() && 
                    data.parent().child('assignedTo').val() == auth.uid"
        },
        
        // Last updated timestamp
        "lastUpdated": {
          ".write": "auth != null && 
                    root.child('responders').child(auth.uid).exists() && 
                    data.parent().child('assignedTo').val() == auth.uid"
        }
      }
    },
    
    // Phone-to-incident mapping for fast lookups
    "phone_incidents": {
      "$phoneNumber": {
        // Users can read their own incident mappings
        ".read": "auth != null && 
                 root.child('users').child($phoneNumber).child('userId').val() == auth.uid",
        
        // Users can write to their incident mappings when creating incidents
        ".write": "auth != null && 
                  root.child('users').child($phoneNumber).child('userId').val() == auth.uid",
        
        "$incidentId": {
          // Add references when creating incidents
          ".write": "auth != null && 
                    root.child('users').child($phoneNumber).child('userId').val() == auth.uid"
        }
      }
    },
    
    // City-based incident alerts for volunteers
    "city_alerts": {
      "$city": {
        // Volunteers in this city can read alerts
        ".read": "auth != null && 
                 root.child('users').child(auth.phoneNumber.replace('+', '')).child('isVolunteer').val() == true &&
                 root.child('users').child(auth.phoneNumber.replace('+', '')).child('state').val() == $city",
        
        // Only responders and admins can write city alerts
        ".write": "auth != null && 
                  (root.child('responders').child(auth.uid).exists() || 
                   root.child('admins').child(auth.uid).exists())",
        
        "$alertId": {
          // Read rules same as parent
          // Write rules for updates by creator
          ".write": "auth != null && 
                    root.child('responders').child(auth.uid).exists() && 
                    data.child('createdBy').val() == auth.uid"
        }
      }
    },
    
    // Volunteer responses
    "volunteer_responses": {
      "$incidentId": {
        // Citizens can see volunteer responses to their incidents
        ".read": "auth != null && 
                 root.child('incidents').child($incidentId).child('userId').val() == auth.uid",
        
        // Responders can see volunteer responses to assigned incidents
        ".read": "auth != null && 
                 root.child('responders').child(auth.uid).exists() && 
                 root.child('incidents').child($incidentId).child('assignedTo').val() == auth.uid",
        
        "$phoneNumber": {
          // Volunteers can create/update their own responses
          ".write": "auth != null && 
                    auth.phoneNumber.replace('+', '') == $phoneNumber && 
                    root.child('users').child($phoneNumber).child('isVolunteer').val() == true"
        }
      }
    },
    
    // Online volunteer tracking (for notifications)
    "online_volunteers": {
      "$city": {
        // Volunteers can read who's online in their city
        ".read": "auth != null && 
                 root.child('users').child(auth.phoneNumber.replace('+', '')).child('isVolunteer').val() == true &&
                 root.child('users').child(auth.phoneNumber.replace('+', '')).child('state').val() == $city",
        
        "$phoneNumber": {
          // Volunteers can update their own online status
          ".write": "auth != null && 
                    auth.phoneNumber.replace('+', '') == $phoneNumber && 
                    root.child('users').child($phoneNumber).child('isVolunteer').val() == true"
        }
      }
    },
    
    // FCM notification tokens
    "notification_tokens": {
      "$phoneNumber": {
        // Users can update their own tokens
        ".write": "auth != null && 
                  root.child('users').child($phoneNumber).child('userId').val() == auth.uid",
        
        // Admins can read all tokens
        ".read": "auth != null && root.child('admins').child(auth.uid).exists()"
      }
    },
    
    // Responders
    "responders": {
      // All authenticated users can see responder list
      ".read": "auth != null",
      
      "$responderId": {
        // Responders can update their own profile
        ".write": "auth != null && auth.uid == $responderId",
        
        // Only admins can create responder accounts
        ".write": "auth != null && root.child('admins').child(auth.uid).exists()"
      }
    },
    
    // Admins
    "admins": {
      // Only admins can read/write
      ".read": "auth != null && root.child('admins').child(auth.uid).exists()",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()"
    }
  }
}