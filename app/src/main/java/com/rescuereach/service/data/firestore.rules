rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isResponder() {
      return isSignedIn() && exists(/databases/$(database)/documents/responders/$(request.auth.uid));
    }
    
    function getResponderRole() {
      return get(/databases/$(database)/documents/responders/$(request.auth.uid)).data.role;
    }
    
    function getResponderState() {
      return get(/databases/$(database)/documents/responders/$(request.auth.uid)).data.state;
    }
    
    function getUserPhoneNumber() {
      // Query the users collection to find the document with this UID
      let userDocs = query(/databases/$(database)/documents/users).where("userId", "==", request.auth.uid).limit(1);
      return userDocs.size() > 0 ? userDocs[0].id : null;
    }
    
    function isVolunteer() {
      let phoneNumber = getUserPhoneNumber();
      return phoneNumber != null && 
             get(/databases/$(database)/documents/users/$(phoneNumber)).data.isVolunteer == true;
    }
    
    function getUserCity() {
      let phoneNumber = getUserPhoneNumber();
      return phoneNumber != null ? 
             get(/databases/$(database)/documents/users/$(phoneNumber)).data.state : null;
    }
    
    // Admin has full access to everything
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // User profiles - using phoneNumber (without +) as document ID
    match /users/{phoneNumber} {
      // Citizens can read/write their own profile
      allow read, write: if isSignedIn() && 
                          (resource == null || resource.data.userId == request.auth.uid);
      
      // Responders can read citizen profiles (for emergency contacts)
      allow read: if isResponder();
      
      // Volunteers can read limited citizen data for alerts
      allow read: if isSignedIn() && isVolunteer();
    }
    
    // Incidents collection
    match /incidents/{incidentId} {
      // Citizens can create incidents
      allow create: if isSignedIn() &&
                     request.resource.data.phoneNumber == getUserPhoneNumber();
      
      // Citizens can read their own incidents
      allow read: if isSignedIn() && resource.data.phoneNumber == getUserPhoneNumber();
      
      // Responders can read incidents that match their role and state
      allow read: if isResponder() && 
                   resource.data.category == getResponderRole() && 
                   resource.data.state == getResponderState();
      
      // Volunteers can read incidents in their city
      allow read: if isSignedIn() && 
                   isVolunteer() && 
                   resource.data.state == getUserCity();
      
      // Responders can update incidents they're assigned to
      allow update: if isResponder() && 
                     (resource.data.assignedTo == request.auth.uid || 
                      request.resource.data.assignedTo == request.auth.uid);
      
      // Allow status updates for assigned responders
      allow update: if isResponder() && 
                     resource.data.assignedTo == request.auth.uid && 
                     request.resource.data.diff(resource.data).affectedKeys()
                     .hasOnly(['status', 'lastUpdated']);
      
      // Citizens can delete their own incidents
      allow delete: if isSignedIn() && resource.data.phoneNumber == getUserPhoneNumber();
    }
    
    // Phone-to-incident index for quick lookups
    match /phone_incidents/{phoneNumber} {
      // Citizens can read their own incident index
      allow read: if isSignedIn() && 
                   get(/databases/$(database)/documents/users/$(phoneNumber)).data.userId == request.auth.uid;
      
      // Citizens can write to their own incident index
      allow write: if isSignedIn() && 
                    get(/databases/$(database)/documents/users/$(phoneNumber)).data.userId == request.auth.uid;
      
      // Incidents subcollection
      match /incidents/{incidentId} {
        allow read: if isSignedIn() && 
                     get(/databases/$(database)/documents/users/$(phoneNumber)).data.userId == request.auth.uid;
        
        allow write: if isSignedIn() && 
                      get(/databases/$(database)/documents/users/$(phoneNumber)).data.userId == request.auth.uid;
      }
    }
    
    // Responders collection
    match /responders/{responderId} {
      // Responders can read/update their own profile
      allow read, update: if isSignedIn() && request.auth.uid == responderId;
      
      // Responders can read about other responders
      allow read: if isResponder();
      
      // Only admins can create responder accounts
      allow create, delete: if isAdmin();
    }
    
    // City-based volunteer alerts
    match /city_alerts/{city} {
      // Volunteers in this city can read alerts
      allow read: if isSignedIn() && 
                   isVolunteer() && 
                   getUserCity() == city;
      
      // Incident alerts subcollection
      match /alerts/{alertId} {
        // Volunteers in this city can read incident alerts
        allow read: if isSignedIn() && 
                     isVolunteer() && 
                     getUserCity() == city;
        
        // Responders and admins can create city alerts
        allow create: if isResponder() || isAdmin();
        
        // Responders can update their own created alerts
        allow update: if isResponder() && resource.data.createdBy == request.auth.uid;
      }
    }
    
    // Volunteer responses to incidents
    match /volunteer_responses/{responseId} {
      // Volunteers can create responses to incidents
      allow create: if isSignedIn() && 
                     isVolunteer() && 
                     request.resource.data.volunteerPhone == getUserPhoneNumber();
      
      // Volunteers can update their own responses
      allow update: if isSignedIn() && 
                     resource.data.volunteerPhone == getUserPhoneNumber();
      
      // Responders can read volunteer responses
      allow read: if isResponder();
      
      // Citizens can read volunteer responses to their incidents
      allow read: if isSignedIn() && 
                   get(/databases/$(database)/documents/incidents/$(resource.data.incidentId)).data.phoneNumber == getUserPhoneNumber();
    }
    
    // Notification tokens for FCM
    match /notification_tokens/{phoneNumber} {
      // Users can update their own tokens
      allow read, write: if isSignedIn() && 
                           get(/databases/$(database)/documents/users/$(phoneNumber)).data.userId == request.auth.uid;
      
      // Admin can read all tokens (for sending notifications)
      allow read: if isAdmin();
    }
    
    // Admin collection
    match /admins/{adminId} {
      // Only admins can read/write admin documents
      allow read, write: if isAdmin();
    }
  }
}